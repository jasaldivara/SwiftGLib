{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trylock"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"trylock is deprecated:"}]},{"type":"text","text":" "},{"type":"text","text":"Use g_rec_mutex_trylock()"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/staticrecmutexprotocol\/trylock()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/StaticRecMutexProtocol\/trylock()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Tries to lock "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is already locked by another thread,"},{"type":"text","text":" "},{"type":"text","text":"it immediately returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Otherwise it locks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":". If "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is already locked by the calling thread, this"},{"type":"text","text":" "},{"type":"text","text":"functions increases the depth of "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and immediately returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"modules":[{"name":"GLib"}],"role":"symbol","title":"trylock()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trylock"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib22StaticRecMutexProtocolPAAE7trylockSbyF","extendedModule":"GLib","platforms":[]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/StaticRecMutexProtocol"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/StaticRecMutexProtocol":{"role":"symbol","title":"StaticRecMutexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StaticRecMutexProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GStaticRecMutex"},{"type":"text","text":" works like a "},{"type":"codeVoice","code":"GStaticMutex"},{"type":"text","text":", but it can be locked"},{"type":"text","text":" "},{"type":"text","text":"multiple times by one thread. If you enter it n times, you have to"},{"type":"text","text":" "},{"type":"text","text":"unlock it n times again to let other threads lock it. An exception"},{"type":"text","text":" "},{"type":"text","text":"is the function "},{"type":"codeVoice","code":"g_static_rec_mutex_unlock_full()"},{"type":"text","text":": that allows you to"},{"type":"text","text":" "},{"type":"text","text":"unlock a "},{"type":"codeVoice","code":"GStaticRecMutex"},{"type":"text","text":" completely returning the depth, (i.e. the"},{"type":"text","text":" "},{"type":"text","text":"number of times this mutex was locked). The depth can later be used"},{"type":"text","text":" "},{"type":"text","text":"to restore the state of the "},{"type":"codeVoice","code":"GStaticRecMutex"},{"type":"text","text":" by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_static_rec_mutex_lock_full()"},{"type":"text","text":". In GLib 2.32, "},{"type":"codeVoice","code":"GStaticRecMutex"},{"type":"text","text":" has"},{"type":"text","text":" "},{"type":"text","text":"been deprecated in favor of "},{"type":"codeVoice","code":"GRecMutex"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRecMutexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StaticRecMutexProtocol"}],"url":"\/documentation\/glib\/staticrecmutexprotocol"},"doc://GLib/documentation/GLib/StaticRecMutexProtocol/trylock()":{"role":"symbol","title":"trylock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trylock"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to lock "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is already locked by another thread,"},{"type":"text","text":" "},{"type":"text","text":"it immediately returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Otherwise it locks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":". If "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is already locked by the calling thread, this"},{"type":"text","text":" "},{"type":"text","text":"functions increases the depth of "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and immediately returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRecMutexProtocol\/trylock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrecmutexprotocol\/trylock()"}}}